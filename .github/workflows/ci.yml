name: xyco ci

on:
  pull_request:
    branches:
      - 'main'
      - 'build/*'

jobs:
  rust-tool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path tools/Cargo.toml --all-targets -- -D warnings
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ./tools/Cargo.toml

  cpp-build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:hirsute
    steps:
      - name: install essential packages
        run: |
          ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
          apt update && apt install -y build-essential git wget cmake
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - name: cache llvm toolchain
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: ${{ runner.os }}-llvm-12
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: build
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_CXX_COMPILER:FILEPATH=clang++ -S . -B ./build -G "Unix Makefiles"
          cmake --build ./build --config Release --target xyco
          cargo run --manifest-path tools/Cargo.toml -p git-hooks -- check clang-tidy -s src -b build

  cpp-test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:hirsute
    steps:
      - name: install essential packages
        run: |
          ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
          apt update && apt install -y build-essential git cmake
      - uses: actions/checkout@v2
      - name: cache llvm toolchain
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: ${{ runner.os }}-llvm-12
      - uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: test
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_CXX_COMPILER:FILEPATH=clang++ -S . -B ./build -G "Unix Makefiles"
          cmake --build ./build --config Release --target xyco_test
          cd build && ctest -C Release -T test --output-on-failure