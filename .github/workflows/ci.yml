name: xyco ci

on:
  pull_request:
    branches:
      - "main"
      - "build/*"

env:
  llvm_version: 17

jobs:
  rust-tool:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          rustup override set nightly && rustup component add clippy
          cargo clippy --manifest-path tools/Cargo.toml --all-targets -- -D warnings
          cargo test --manifest-path ./tools/Cargo.toml

  cpp-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: install essential packages
        run: |
          sudo apt-get install -y ninja-build liburing-dev libboost-all-dev
          sudo bash scripts/install_llvm.sh $llvm_version
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DCMAKE_CXX_COMPILER=clang-$llvm_version -S . -B ./build -G "Ninja"
          cmake --build ./build --config Release --target all
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DCMAKE_CXX_COMPILER=clang-$llvm_version -DENABLE_LOGGING=ON -S . -B ./build -G "Ninja"
          cmake --build ./build --config Release --target all
          bazel build --config=opt //benchmark:all //examples:all //src:all //tests:all
          bazel build --config=opt --config=enable_logging //benchmark:all //examples:all //src:all //tests:all
          rustup override set nightly
          cargo run --manifest-path tools/Cargo.toml -p git-hooks -- check clang-format --source src benchmark tests examples --tool-version $llvm_version
          cargo run --manifest-path tools/Cargo.toml -p git-hooks -- check clang-tidy --source src benchmark examples --build build --tool-version $llvm_version --extra-arg="-I/usr/lib/llvm-$llvm_version/include/c++/v1/"

  cpp-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: install essential packages
        run: |
          sudo apt-get install -y lcov liburing-dev libboost-all-dev
          sudo bash scripts/install_llvm.sh $llvm_version
      - name: test
        run: |
          bazel coverage --config=opt --config=coverage --config=enable_logging --test_output=all //tests:xyco_test_epoll --test_arg=--gtest_repeat=100 --test_arg=--gtest_break_on_failure --test_arg=--gtest_shuffle --test_arg=--gtest_death_test_style=threadsafe
          bazel coverage --config=opt --config=coverage --config=enable_logging --test_output=all //tests:xyco_test_uring --test_arg=--gtest_repeat=100 --test_arg=--gtest_break_on_failure --test_arg=--gtest_shuffle --test_arg=--gtest_death_test_style=threadsafe
          mv $(bazel info bazel-testlogs)/tests/xyco_test_epoll/coverage.dat coverage_epoll.dat && mv $(bazel info bazel-testlogs)/tests/xyco_test_uring/coverage.dat coverage_uring.dat
      - name: upload epoll coverage report
        uses: codecov/codecov-action@v3
        with:
          flags: epoll
          files: coverage_epoll.dat
          fail_ci_if_error: true
          verbose: true
      - name: upload uring coverage report
        uses: codecov/codecov-action@v3
        with:
          flags: uring
          files: coverage_uring.dat
          fail_ci_if_error: true
          verbose: true
      - name: upload tests coverage report
        uses: codecov/codecov-action@v3
        with:
          flags: tests
          files: coverage_epoll.dat,coverage_uring.dat
          fail_ci_if_error: true
          verbose: true
