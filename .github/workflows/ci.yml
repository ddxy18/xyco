name: xyco ci

on:
  pull_request:
    branches:
      - 'main'
      - 'build/*'

env:
  llvm_version: 13

jobs:
  rust-tool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path tools/Cargo.toml --all-targets -- -D warnings
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ./tools/Cargo.toml

  cpp-build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:21.10
    steps:
      - name: install essential packages
        run: |
          ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
          apt-get -y update && apt-get -y upgrade
          apt install -y binutils git cmake curl
          apt install -y clang-$llvm_version clang-tidy-$llvm_version
          apt install -y libc++-$llvm_version-dev libc++abi-$llvm_version-dev libunwind-$llvm_version-dev
          ln -s /usr/bin/clang-tidy-$llvm_version /usr/bin/clang-tidy
          ln -s /usr/bin/clang-$llvm_version /usr/bin/clang
          ln -s /usr/bin/clang++-$llvm_version /usr/bin/clang++
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - name: build
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_CXX_COMPILER:FILEPATH=clang++ -S . -B ./build -G "Unix Makefiles"
          cmake --build ./build --config Release --target xyco
          echo '[target.x86_64-unknown-linux-gnu]' >> $HOME/.cargo/config.toml
          echo 'rustflags = ["-C", "linker=clang"]' >> $HOME/.cargo/config.toml
          cargo run --manifest-path tools/Cargo.toml -p git-hooks -- check clang-tidy --source=src --build=build --extra-arg="-I/usr/lib/llvm-13/include/c++/v1/"

  cpp-test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:21.10
    steps:
      - name: install essential packages
        run: |
          ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
          apt-get -y update && apt-get -y upgrade
          apt install -y binutils git cmake \
          clang-$llvm_version libc++-$llvm_version-dev libc++abi-$llvm_version-dev libunwind-$llvm_version-dev
          ln -s /usr/bin/clang-$llvm_version /usr/bin/clang
          ln -s /usr/bin/clang++-$llvm_version /usr/bin/clang++
      - uses: actions/checkout@v2
      - name: test
        run: |
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_CXX_COMPILER:FILEPATH=clang++ -S . -B ./build -G "Unix Makefiles"
          cmake --build ./build --config Release --target xyco_test
          LLVM_PROFILE_FILE="./build/tests/xyco_test.profraw" ./build/tests/xyco_test --gtest_repeat=100 --gtest_break_on_failure --gtest_shuffle --gtest_brief=1
          llvm-profdata-$llvm_version merge -sparse ./build/tests/xyco_test.profraw -o ./build/tests/xyco_test.profdata
          llvm-cov-$llvm_version show ./build/tests/xyco_test -instr-profile=./build/tests/xyco_test.profdata > ./build/tests/coverage.txt
      - name: upload coverage reports
        uses: codecov/codecov-action@v2
        with:
          files: ./build/tests/coverage.txt
          fail_ci_if_error: true
          verbose: true